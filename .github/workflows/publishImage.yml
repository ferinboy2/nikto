name: publishImage
concurrency:
  group: ${{ github.event_name }}-${{ github.repository }}-${{ github.ref_name }}
  cancel-in-progress: true
on:
  pull_request:
  push:
    branches:
      - master
permissions:
  actions: read
  contents: read
  packages: write
  pull-requests: write
jobs:
  secureScan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build
        uses: docker/build-push-action@v6
        with:
          tags: local://${{ github.event.organization }}/${{ github.event.repository.name }}:latest
          push: false
      - name: Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1.11.0
        with:
          command: cves,recommendations
          image: local://${{ github.event.repository.name }}:latest
          to-latest: true
          only-severities: critical,high
          sarif-file: sarif.output.json
          summary: true
          write-comment: true
          exit-on: vulnerability
          exit-code: true
          github-token: ${{ secrets.GITHUB_TOKEN }} # to be able to write the comment
  publishImage:
    if: ${{ (github.ref_name == 'main') }}
    runs-on: ubuntu-latest
    needs: secureScan
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.event.repository.name }}
          tags: |
            type=sha,prefix={{branch}}-
            type=sha
            type={{tag}}
      - name: Extract version from package.json
        id: getVersion
        run: echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
